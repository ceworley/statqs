<!DOCTYPE html>
<html>
<head>
<title>Normal Calculator</title>
<meta charset="utf-8">
</head>

<script>
const col1 = "#aa000077";
const col2 = "#008888aa";

function dnorm(z){
	return(Math.exp(-(z**2)/2)/Math.sqrt(2*Math.PI));
}
function pnorm(x, mu=0, sigma=1) {
    return Math.round(stdNormal((x-mu)/sigma)*1e6)/1e6;
}
function stdNormal(z) {
    var j, k, kMax, m, values, total, subtotal, item, z2, z4, a, b;
    if (z < -6) { return 0; }
    if (z >  6) { return 1; }
    m      = 1;        // m(k) == (2**k)/factorial(k)
    b      = z;        // b(k) == z ** (2*k + 1)
    z2     = z * z;    // cache of z squared
    z4     = z2 * z2;  // cache of z to the 4th
    values = [];
    for (k=0; k<100; k+=2) {
        a = 2*k + 1;
        item = b / (a*m);
        item *= (1 - (a*z2)/((a+1)*(a+2)));
        values.push(item);
        m *= (4*(k+1)*(k+2));
        b *= z4;
    }
    total = 0;
    for (k=49; k>=0; k--) {
        total += values[k];
    }
    return 0.5 + 0.3989422804014327 * total;
}
function qnorm(p,mu=0,sigma=1) {
    var a1 = -39.6968302866538, a2 = 220.946098424521, a3 = -275.928510446969;
    var a4 = 138.357751867269, a5 = -30.6647980661472, a6 = 2.50662827745924;
    var b1 = -54.4760987982241, b2 = 161.585836858041, b3 = -155.698979859887;
    var b4 = 66.8013118877197, b5 = -13.2806815528857, c1 = -7.78489400243029E-03;
    var c2 = -0.322396458041136, c3 = -2.40075827716184, c4 = -2.54973253934373;
    var c5 = 4.37466414146497, c6 = 2.93816398269878, d1 = 7.78469570904146E-03;
    var d2 = 0.32246712907004, d3 = 2.445134137143, d4 = 3.75440866190742;
    var p_low = 0.02425, p_high = 1 - p_low;
    var q, r;
    var retVal;

    if ((p < 0) || (p > 1))
    {
        alert("NormSInv: Argument out of range.");
        retVal = 0;
    }
    else if (p==0)
    {
		  retVal = Number.NEGATIVE_INFINITY;    
    }
    else if (p==1)
    {
    	retVal = Number.POSITIVE_INFINITY;    
    }
    else if (p < p_low)
    {
        q = Math.sqrt(-2 * Math.log(p));
        retVal = (((((c1 * q + c2) * q + c3) * q + c4) * q + c5) * q + c6) / ((((d1 * q + d2) * q + d3) * q + d4) * q + 1);
    }
    else if (p <= p_high)
    {
        q = p - 0.5;
        r = q * q;
        retVal = (((((a1 * r + a2) * r + a3) * r + a4) * r + a5) * r + a6) * q / (((((b1 * r + b2) * r + b3) * r + b4) * r + b5) * r + 1);
    }
    else
    {
        q = Math.sqrt(-2 * Math.log(1 - p));
        retVal = -(((((c1 * q + c2) * q + c3) * q + c4) * q + c5) * q + c6) / ((((d1 * q + d2) * q + d3) * q + d4) * q + 1);
    }
    return retVal*sigma+mu;
}

function reset(){
	document.getElementById("mu").value = 0;
	document.getElementById("sigma").value = 1;
	document.getElementById("right").checked = true;
	document.getElementById("left").checked = true;
	document.getElementById("left").checked = false;
	erasefill();
}

function numbs(){
	const w = 20;
	var mue = document.getElementById("mu");
	var sige = document.getElementById("sigma");
	if(isNaN(mue.value) || isNaN(sige.value)){
		return;
	}
	var mu = Number(mue.value);
	var sig = Number(sige.value);
	var gg1 = document.createElementNS("http://www.w3.org/2000/svg","g");
	gg1.setAttribute("id","gg1");
	for(var z=-3;z<=3.1;z++){
		var txt1 = document.createElementNS("http://www.w3.org/2000/svg","text");
		txt1.setAttribute("x",z*5*w+15*w);
		txt1.setAttribute("y",9.5*w);
		txt1.setAttribute("text-anchor","middle")
		txt1.appendChild(document.createTextNode(Math.round((z*sig+mu)*10000)/10000));
		gg1.appendChild(txt1);
	 }
	var txt1 = document.createElementNS("http://www.w3.org/2000/svg","text");
	txt1.setAttribute("x",15*w);
	txt1.setAttribute("y",10.2*w);
	txt1.setAttribute("text-anchor","middle")
	txt1.appendChild(document.createTextNode("x"));
	gg1.appendChild(txt1);
	eraseXvals();
	document.getElementById("viz").appendChild(gg1);
}


</script>

<body onload="reset();">

<h2>Normal Probability Calculator</h2>


<h3>Population parameters</h3>
<h4>Population mean</h4>
<label for="mu">μ = </label>
<input type="text" id="mu" placeholder="μ" value="0" onchange="numbs()" onclick=this.select()></input>
<h4>Population standard deviation</h4>
<label for="sigma">σ = </label>
<input type="text" id="sigma" placeholder="σ" value="1" onchange="numbs()" onclick=this.select()></input>

<h3>Type of interval</h3>
<input type="radio" id="left" name="ptype" value="left" onclick="makebap(this)">
<label for="left">left</label>
<br/>
<input type="radio" id="right" name="ptype" value="right"  onclick="makebap(this)">
<label for="right">right</label>
<br/>
<input type="radio" id="center" name="ptype" value="center"  onclick="makebap(this)">
<label for="center">center</label>
<br/>
<input type="radio" id="twotail" name="ptype" value="twotail"  onclick="makebap(this)">
<label for="twotail">two-tail</label>
<br/>
<input type="radio" id="arbitrary" name="ptype" value="arbitrary"  onclick="makebap(this)">
<label for="arbitrary">arbitrary bounded interval</label>

<h4 id="h_bap"></h4>

<div name="help" id="help"></div>

<div name="bap" id="bap">
</div>

<div name="calc" id="calc"></div> 

<h4>Visualizations</h4>

<h5>Density</h5>
<script>

function showcalcA(){
	var ba = Number(document.getElementById("b1").value);
	var bb = Number(document.getElementById("b2").value);
	var pa = Number(document.getElementById("PA").value);
	var MU = Number(document.getElementById("mu").value);
	var SIG = Number(document.getElementById("sigma").value);
	var za = (ba-MU)/SIG;
	var zb = (bb-MU)/SIG;
	za = Math.round(za*10000)/10000;
	zb = Math.round(zb*10000)/10000;
	var retstr = "<h4>Calculations</h4>";
	retstr+= "X~N("+MU+","+SIG+")<br>";
	retstr+= "P("+ba+"< X <"+bb+")  =  P("+za+"< Z <"+zb+")  =  "+pa;
	return retstr;
}

function calcb1(){
	var b1 = document.getElementById("b1");
	var b2 = document.getElementById("b2");
	var PA = document.getElementById("PA");
	var mue = document.getElementById("mu");
	var sigmae = document.getElementById("sigma");
	if (isNaN(mue.value) || isNaN(sigmae.value)){
		alert("mu and sigma must be numbers!");
		mue.value = "";
		mue.placeholder = "must be a number";
		sigmae.value = "";
		sigmae.placeholder = "must be a number";	
		return;
	}
	var mu = Number(mue.value);
	var sigma = Number(sigmae.value);
	if (isNaN(b2.value) || isNaN(PA.value)){
		b2.value = "";
		b2.placeholder = "b2, must be a number";
		PA.value = "";
		PA.placeholder = "P(b1<Z<b2), must be a number";	
	} else {
		var b2v = Number(b2.value);
		var PAv = Number(PA.value);
		var z2v = Math.round((b2v-mu)/sigma*10000)/10000;
		var p2 = pnorm(z2v);
		var p1 = p2-PAv;
		if(p1<=1 && p1>=0){
			var z1v = Math.round(qnorm(p1)*10000)/10000;
		} else {
			var z1v = -3;
			PA.value = Math.round((pnorm(z2v)-pnorm(z1v))*10000)/10000;
		}
		b1.value = Math.round((mu+sigma*z1v)*10000)/10000;
		c1 = document.getElementById("calc");
		c1.innerHTML = showcalcA();
		erasefill();
		drawA(Number(z1v),Number(z2v));
		drawB(Number(z1v),Number(z2v));
	}
}
function calcb2(){
	var b1 = document.getElementById("b1");
	var b2 = document.getElementById("b2");
	var PA = document.getElementById("PA");
	var mue = document.getElementById("mu");
	var sigmae = document.getElementById("sigma");
	if (isNaN(mue.value) || isNaN(sigmae.value)){
		alert("mu and sigma must be numbers!");
		mue.value = "";
		mue.placeholder = "must be a number";
		sigmae.value = "";
		sigmae.placeholder = "must be a number";	
		return;
	}
	var mu = Number(mue.value);
	var sigma = Number(sigmae.value);
	if (isNaN(b1.value) || isNaN(PA.value)){
		b1.value = "";
		b1.placeholder = "b1, must be a number";
		PA.value = "";
		PA.placeholder = "P(b1<X<b2), must be a number";	
	} else {
		var b1v = Number(b1.value);
		var PAv = Number(PA.value);
		var z1v = Math.round((b1v-mu)/sigma*10000)/10000;
		var p1 = pnorm(z1v);
		var p2 = p1+PAv;
		if(p2<=1 && p2>=0){
			var z2v = Math.round(qnorm(p2)*10000)/10000;
		} else {
			var z2v = 3;
			PA.value = Math.round((pnorm(z2v)-pnorm(z1v))*10000)/10000;
		}
		b2.value = Math.round((mu+sigma*z2v)*10000)/10000;
		c1 = document.getElementById("calc");
		c1.innerHTML = showcalcA();
		erasefill();
		drawA(Number(z1v),Number(z2v));
		drawB(Number(z1v),Number(z2v));
	}
}
function calcPA(){
	var b1 = document.getElementById("b1");
	var b2 = document.getElementById("b2");
	var PA = document.getElementById("PA");
	var mue = document.getElementById("mu");
	var sigmae = document.getElementById("sigma");
	if (isNaN(mue.value) || isNaN(sigmae.value)){
		alert("mu and sigma must be numbers!");
		mue.value = "";
		mue.placeholder = "must be a number";
		sigmae.value = "";
		sigmae.placeholder = "must be a number";	
		return;
	}
	var mu = Number(mue.value);
	var sigma = Number(sigmae.value);
	if (isNaN(b1.value) || isNaN(b2.value)){
		b1.value = "";
		b1.placeholder = "b1, must be a number";
		b2.value = "";
		b2.placeholder = "b2, must be a number";	
	} else {
		var z1v = (b1.value-mu)/sigma;
		var z2v = (b2.value-mu)/sigma;
		PA.value = Math.round((pnorm(z2v)-pnorm(z1v))*10000)/10000;
		c1 = document.getElementById("calc");
		c1.innerHTML = showcalcA();
		erasefill();		
		drawA(Number(z1v),Number(z2v));
		drawB(Number(z1v),Number(z2v));
	}
}

function eraseXvals(){
	gg1 = document.getElementById("gg1");
	if(gg1 != null){
		gg1.parentNode.removeChild(gg1);
	}
	gg1 = document.getElementById("gg1");
	if(gg1 != null){
		gg1.parentNode.removeChild(gg1);
	}
}

function erasefill(){
	plold = document.getElementById("fil");
	b1old = document.getElementById("b1d");
	b2old = document.getElementById("b2d");
	if(plold != null){
		plold.parentNode.removeChild(plold);
	}
	if(b1old != null){
		b1old.parentNode.removeChild(b1old);
	}
	if(b2old != null){
		b2old.parentNode.removeChild(b2old);
	}
	plold = document.getElementById("fil");
	b1old = document.getElementById("b1d");
	b2old = document.getElementById("b2d");
	if(plold != null){
		plold.parentNode.removeChild(plold);
	}
	if(b1old != null){
		b1old.parentNode.removeChild(b1old);
	}
	if(b2old != null){
		b2old.parentNode.removeChild(b2old);
	}
	arcold = document.getElementById("arc");
	if(arcold != null){
		arcold.parentNode.removeChild(arcold);
	}
	arcold = document.getElementById("arc");
	if(arcold != null){
		arcold.parentNode.removeChild(arcold);
	}
	gold = document.getElementById("cgroup");
	if(gold != null){
		gold.parentNode.removeChild(gold);
	}
	gold = document.getElementById("cgroup");
	if(gold != null){
		gold.parentNode.removeChild(gold);
	}
}

function drawA(z1,z2){
	z1 = Math.max(-3,z1);
	z2 = Math.min(3,z2);
	svg = document.getElementById("viz");
	var w = 20;
	var pl1 = document.createElementNS("http://www.w3.org/2000/svg","polyline");
	var p1 = pnorm(z1);
	var p2 = pnorm(z2);
	var x1 = z1*5*w+15*w;
	var x2 = z2*5*w+15*w;
	var y0 = 8*w;
	var y1 = 8*w-dnorm(z1)*20*w;
	var y2 = 8*w-dnorm(z2)*20*w;
	var pnts = ""+x1+","+y0+" ";
	for(var zz=z1;zz<z2;zz+=0.1){
		var x = zz*5*w+15*w;
		var y = 8*w-dnorm(zz)*20*w;
		pnts = pnts+x+","+y+" ";
	}
	pnts = pnts+x2+","+y2+" "+x2+","+y0;
 	pl1.setAttribute("points", pnts);
 	pl1.setAttribute("id","fil");
 	pl1.setAttribute("fill", col1);
 	pl1.setAttribute("stroke","none");
 	svg.appendChild(pl1);
 	pl2 = document.createElementNS("http://www.w3.org/2000/svg","polyline");
	pnts = ""+x1+","+y0+" "+x1+","+y1;
	pl2.setAttribute("points", pnts);
 	pl2.setAttribute("id","b1d");
 	pl2.setAttribute("stroke",col2);
 	pl2.setAttribute("stroke-width","5");
 	svg.appendChild(pl2);
 	pl3 = document.createElementNS("http://www.w3.org/2000/svg","polyline");
	pnts = ""+x2+","+y0+" "+x2+","+y2;
	pl3.setAttribute("points", pnts);
 	pl3.setAttribute("id","b2d");
 	pl3.setAttribute("stroke",col2);
 	pl3.setAttribute("stroke-width","5");
 	svg.appendChild(pl3);
}

function makebap(rsel){
	erasefill();
	document.getElementById("calc").innerHTML = "";
	var f1 = document.getElementById("bap");
	while(f1.firstChild){
		f1.removeChild(f1.firstChild);	
	}
	if(rsel.value=="arbitrary"){
		document.getElementById("h_bap").innerHTML = "Boundaries and probability";
		document.getElementById("help").innerHTML = "<p>Fill in two quantities; calculate the third. The calculation assumes b<sub>1</sub> < b<sub>2</sub>.</p>";
		var label = document.createElement("label");
		var txt = document.createElement("input");
		txt.type = "text";
		txt.name = "b1";
		txt.id = "b1";
		txt.value = "";
		txt.setAttribute("onclick","this.select()")
		txt.placeholder = "b1";
		txt.setAttribute("style","background-color:"+col2);
		label.innerHTML = "b<sub>1</sub> = ";
		label.appendChild(txt);
		f1.appendChild(label);
		var but1 = document.createElement("button");
		but1.name = "calcb1";
		but1.value = "calcb1";	
		but1.onclick = calcb1;
		but1.innerHTML = "calculate b<sub>1</sub>";
		f1.appendChild(but1);
		f1.appendChild(document.createElement("br"));
		var label = document.createElement("label");
		var txt = document.createElement("input");
		txt.type = "text";
		txt.name = "b2";
		txt.id = "b2";
		txt.value = "";
		txt.setAttribute("onclick","this.select()")
		txt.placeholder = "b2";
		txt.setAttribute("style","background-color:"+col2);
		label.innerHTML = "b<sub>2</sub> = ";
		label.appendChild(txt);
		f1.appendChild(label);
		var but1 = document.createElement("button");
		but1.name = "calcb2";
		but1.value = "calcb2";
		but1.onclick = calcb2;
		but1.innerHTML = "calculate b<sub>2</sub>"
		f1.appendChild(but1);
		f1.appendChild(document.createElement("br"));
		var label = document.createElement("label");
		var txt = document.createElement("input");
		txt.type = "text";
		txt.name = "PA";
		txt.id = "PA";
		txt.setAttribute("onclick","this.select()")
		txt.value = "";
		txt.placeholder = "P(b1<X<b2)";		
		label.innerHTML = "P(b<sub>1</sub> < X < b<sub>2</sub>) = ";
		label.appendChild(txt);
		f1.appendChild(label);
		var but1 = document.createElement("button");
		but1.name = "calcPA";
		but1.value = "calcPA";
		but1.onclick = calcPA;
		but1.innerHTML = "calculate P(b<sub>1</sub> < X < b<sub>2</sub>)";
		txt.setAttribute("style","background-color:"+col1);
		f1.appendChild(but1);
	} else {
		if(rsel.value=="left" || rsel.value=="right"){
			document.getElementById("h_bap").innerHTML = "Boundary and probability";
		} else {
			document.getElementById("h_bap").innerHTML = "Radius and probability";
		}
		document.getElementById("help").innerHTML = "";
		var label = document.createElement("label");
		var txt = document.createElement("input");
		txt.type = "text";
		txt.value = "";
		txt.setAttribute("onclick","this.select()");
		switch(rsel.value){
			case "left": txt.setAttribute("style","background-color:"+col2);txt.setAttribute("onchange","calcP('left')");break;
			case "right": txt.setAttribute("style","background-color:"+col2);txt.setAttribute("onchange","calcP('right')");break; 
			case "center": txt.setAttribute("style","background-color:"+col2);txt.setAttribute("onchange","calcP('center')");break;
			case "twotail": txt.setAttribute("style","background-color:"+col2);txt.setAttribute("onchange","calcP('twotail')");break; 
		}
		if(rsel.value=="left" || rsel.value=="right"){
			txt.name = "b";
			txt.id = "b";
			txt.placeholder = "b";
			label.innerHTML = "b = ";
		} else {
			txt.name = "r";
			txt.id = "r";
			txt.placeholder = "r";
			label.innerHTML = "r = ";
		}
		label.appendChild(txt);
		f1.appendChild(label);
		f1.appendChild(document.createElement("br"));
		var label = document.createElement("label");
		var txt = document.createElement("input");
		txt.type = "text";
		txt.name = "P";
		txt.id = "P";
		txt.setAttribute("onclick","this.select()");
		txt.value = "";
		switch(rsel.value){
			case "left": txt.placeholder = "P(X < b)";txt.setAttribute("onchange","calcbr('left')");break;
			case "right": txt.placeholder = "P(X > b)";txt.setAttribute("onchange","calcbr('right')");break; 
			case "center": txt.placeholder = "P(|X-μ| < r)";txt.setAttribute("onchange","calcbr('center')");break;
			case "twotail": txt.placeholder = "P(|X-μ| > r)";txt.setAttribute("onchange","calcbr('twotail')");break; 
		}		
		label.innerHTML = txt.placeholder+" = ";
		txt.setAttribute("style","background-color:"+col1);
		label.appendChild(txt);
		f1.appendChild(label);
	}
}

function calcP(rsv){
	var mue = document.getElementById("mu");
	var sigmae = document.getElementById("sigma");
	if(isNaN(mue.value) || isNaN(sigmae.value)){
		alert("Mu and sigma must be numbers!");
		mue.value = "";
		mue.placeholder = "must be a number";
		sigmae.value = "";
		sigmae.placeholder = "must be a number";
		return;
	}
	var mu = Number(mue.value);
	var sigma = Number(sigmae.value);
	var Pe = document.getElementById("P");
	var c1 = document.getElementById("calc");
	if(rsv == "left"){
		var be = document.getElementById("b");
		if(isNaN(be.value)){
			be.value="";
			be.placeholder="b, must be a number";
			return;
		}
		var b = Number(be.value);
		var z = (b-mu)/sigma;
		var p = pnorm(z);
		z = Math.round(z*10000)/10000;
		var P = Math.round(p*10000)/10000;
		c1.innerHTML = "<h4>Calculations</h4> X~N("+mu+","+sigma+")<br> z = (b-μ)/σ = "+z+"<br> P(X < "+b+")  =  P(Z < "+z+")  =  "+P;
		Pe.value = P;
		erasefill();
		drawA(-3,z);
		drawB(-6,z);
	} else if (rsv == "right"){
		var be = document.getElementById("b");
		if(isNaN(be.value)){
			be.value="";
			be.placeholder="b, must be a number";
			return;
		}
		var b = Number(be.value);
		var z = (b-mu)/sigma;
		var p = pnorm(z);
		z = Math.round(z*10000)/10000;
		var P = Math.round((1-p)*10000)/10000;
		c1.innerHTML = "<h4>Calculations</h4> X~N("+mu+","+sigma+")<br> z = (b-μ)/σ = "+z+"<br> P(X > "+b+")  =  P(Z > "+z+")  =  "+P;
		Pe.value = P;
		erasefill();
		drawA(z,3);
		drawB(z,6);
	} else if (rsv == "center"){
		var re = document.getElementById("r");
		if(isNaN(re.value)){
			re.value="";
			re.placeholder="r, must be a number";
			return;
		}
		var r = Number(re.value);
		var z = r/sigma;
		var p = pnorm(z);
		z = Math.round(z*10000)/10000;
		erasefill();
		if(p<0.5){P=0;}	else {P=(p-0.5)*2;drawA(-z,z);drawB(-z,z);}
		P = Math.round(P*10000)/10000;
		c1.innerHTML = "<h4>Calculation</h4> X~N("+mu+","+sigma+")<br> z = r/σ = "+z+"<br> P(|X-"+mu+"|<"+r+")  =  P(|Z| < "+z+") = "+P;
		Pe.value = P;
	} else if (rsv == "twotail"){
		var re = document.getElementById("r");
		if(isNaN(re.value)){
			re.value="";
			re.placeholder="r, must be a number";
			return;
		}
		var r = Number(re.value);
		var z = r/sigma;
		var p = pnorm(z);
		z = Math.round(z*10000)/10000;
		erasefill();
		P = Math.round(P*10000)/10000;
		if(p<0.5){P=1;drawA(-3,3)} else {P=(1-p)*2;drawA(-3,-Math.abs(z));drawB(-6,-Math.abs(z));drawA(Math.abs(z),3);drawB(Math.abs(z),6);}
		P = Math.round(P*10000)/10000;
		c1.innerHTML = "<h4>Calculation</h4> X~N("+mu+","+sigma+")<br> z = r/σ = "+z+"<br> P(|X-"+mu+"|>"+r+")  =  P(|Z| > "+z+") = "+P;
		Pe.value = P;
	}
}


function calcbr(rsv){
	var mue = document.getElementById("mu");
	var sigmae = document.getElementById("sigma");
	if(isNaN(mue.value) || isNaN(sigmae.value)){
		alert("Mu and sigma must be numbers!");
		mue.value = "";
		mue.placeholder = "must be a number";
		sigmae.value = "";
		sigmae.placeholder = "must be a number";
		return;
	}
	var mu = Number(mue.value);
	var sigma = Number(sigmae.value);
	var Pe = document.getElementById("P");
	if(isNaN(Pe.value)){
		Pe.value="";
		Pe.placeholder="must be a number";
		return;
	}
	if(Pe.value<0 || Pe.value>1){
		Pe.value="";
		Pe.placeholder="must be between 0 and 1";
		return;
	}
	var c1 = document.getElementById("calc");
	var P = Number(Pe.value);
	var z = 0;
	if(rsv == "left"){
		var be = document.getElementById("b");
		z = Math.round(qnorm(P)*10000)/10000;
		erasefill();
		drawA(-3,z);
		drawB(-6,z);
		var b = z*sigma+mu;
		b = Math.round(b*10000)/10000;
		be.value = b;
		c1.innerHTML = "<h4>Calculations</h4> X~N("+mu+","+sigma+")<br> z = (b-μ)/σ = "+z+"<br> P(X < "+b+")  =  P(Z < "+z+")  =  "+P;
	} else if (rsv == "right"){
		var be = document.getElementById("b");
		z = Math.round(qnorm(1-P)*10000)/100000;	
		erasefill();
		var b = z*sigma+mu;
		b = Math.round(b*10000)/10000;
		be.value = b;
		c1.innerHTML = "<h4>Calculations</h4> X~N("+mu+","+sigma+")<br> z = (b-μ)/σ = "+z+"<br> P(X > "+b+")  =  P(Z > "+z+")  =  "+P;
		drawA(z,3);
		drawB(z,6);
	} else if (rsv == "center"){
		var re = document.getElementById("r");
		erasefill();
		z = qnorm(P/2+0.5);
		z = Math.round(z*10000)/10000;
		var r = z*sigma;
		r = Math.round(r*10000)/10000;
		re.value = r;
		c1.innerHTML = "<h4>Calculation</h4> X~N("+mu+","+sigma+")<br> z = r/σ = "+z+"<br> P(|X-"+mu+"|<"+r+")  =  P(|Z| < "+z+") = "+P;
		drawA(-Math.abs(z),Math.abs(z));
		drawB(-Math.abs(z),Math.abs(z));
	} else if (rsv == "twotail"){
		var re = document.getElementById("r");
		erasefill();
		z = qnorm(1-P/2);		
		z = Math.round(z*10000)/10000;
		var r = z*sigma;
		r = Math.round(r*10000)/10000;
		re.value = r;
		c1.innerHTML = "<h4>Calculation</h4> X~N("+mu+","+sigma+")<br> z = r/σ = "+z+"<br> P(|X-"+mu+"|>"+r+")  =  P(|Z| > "+z+") = "+P;
		drawA(-3,-Math.abs(z));
		drawA(Math.abs(z),3);
		drawB(-6,-Math.abs(z));
		drawB(Math.abs(z),6);
	}
}

</script>

<div id="svg12345"></div>
<script>
 const svg1 = document.createElementNS("http://www.w3.org/2000/svg", "svg");
 const w = 20;
 svg1.setAttribute("width", 32*w);
 svg1.setAttribute("height", 8*w+5*w);
 svg1.setAttribute("viewBox","-"+w+" 0 "+32*w+" "+13*w)
 for(var z=-3;z<=3.1;z+=0.2){
	var x = z*5*w+15*w;
	var ply = document.createElementNS("http://www.w3.org/2000/svg","polyline");
	ply.setAttribute("points",""+x+",0 "+x+","+8*w);
	ply.setAttribute("fill","none");
	ply.setAttribute("stroke","#aaaaaa");
	svg1.appendChild(ply);
 }
  for(var y=0;y<=0.4;y+=0.05){
	var ply = document.createElementNS("http://www.w3.org/2000/svg","polyline");
	ply.setAttribute("points","0,"+y*w*20+" "+30*w+","+y*w*20);
	ply.setAttribute("fill","none");
	ply.setAttribute("stroke","#aaaaaa");
	svg1.appendChild(ply);
 }
  const pol1 = document.createElementNS("http://www.w3.org/2000/svg","polyline");
 var pnts = ""
 for(z=-3;z<=3.05;z+=0.1){
	var x = z*5*w+15*w;
	var y = 8*w-dnorm(z)*20*w;
	pnts = pnts+x+","+y+" ";
}
 pol1.setAttribute("points", pnts);
 pol1.setAttribute("fill", "none");
 pol1.setAttribute("stroke","black");
 pol1.setAttribute("stroke-width","2");
 svg1.appendChild(pol1);
 for(z=-3;z<=3.1;z++){
	var txt1 = document.createElementNS("http://www.w3.org/2000/svg","text");
	txt1.setAttribute("x",z*5*w+15*w);
	txt1.setAttribute("y",11.5*w);
	txt1.setAttribute("text-anchor","middle")
	txt1.appendChild(document.createTextNode(z));
 	svg1.appendChild(txt1);
 }
var txt1 = document.createElementNS("http://www.w3.org/2000/svg","text");
txt1.setAttribute("x",15*w);
txt1.setAttribute("y",12.2*w);
txt1.setAttribute("text-anchor","middle")
txt1.appendChild(document.createTextNode("z"));
svg1.appendChild(txt1);
svg1.id = "viz";
document.getElementById("svg12345").appendChild(svg1);



function drawB(z1,z2){
	var pp1 = pnorm(z1);
	var pp2 = pnorm(z2);
	var s = document.getElementById("spinner");
	var pnts = "0,0 ";
	var x = 0;
	var y = 0;
	for(var pp=pp1;pp<pp2;pp+=0.01){
		x = Math.sin(pp*2*Math.PI);
		y = -Math.cos(pp*2*Math.PI);
		pnts = pnts+x+","+y+" ";	
	}
	x = Math.sin(pp2*2*Math.PI);
	y = -Math.cos(pp2*2*Math.PI);
	pnts = pnts+x+","+y+" 0,0";
	pl1 = document.createElementNS("http://www.w3.org/2000/svg","polyline");
	pl1.setAttribute("points", pnts);
 	pl1.setAttribute("id","arc");
 	pl1.setAttribute("fill",col1);
 	pl1.setAttribute("stroke","none");
 	s.appendChild(pl1);
 	
 	var c = document.getElementById("cumul");
 	var y1 = 550-pnorm(z1)*500;
 	var y2 = 550-pnorm(z2)*500;
 	z1 = Math.min(Math.max(-3,z1),3)
 	z2 = Math.max(Math.min(3,z2),-3)
 	var x1 = 50*z1+200;
 	var x2 = 50*z2+200;
	var g = document.createElementNS("http://www.w3.org/2000/svg","g");
	g.setAttribute("id","cgroup");
	var pt1 = document.createElementNS("http://www.w3.org/2000/svg","circle");
	var pt2 = document.createElementNS("http://www.w3.org/2000/svg","circle");
	var ln1 = document.createElementNS("http://www.w3.org/2000/svg","line");
	var ln2 = document.createElementNS("http://www.w3.org/2000/svg","line");
	var ln3 = document.createElementNS("http://www.w3.org/2000/svg","line");
	var ln4 = document.createElementNS("http://www.w3.org/2000/svg","line");
	pt1.setAttribute("cx",x1);
	pt1.setAttribute("cy",y1);
	pt1.setAttribute("r",5);
	pt1.setAttribute("fill","#00000088");
	pt1.setAttribute("stroke","black");
	pt1.setAttribute("stroke-width","1");
	pt2.setAttribute("cx",x2);
	pt2.setAttribute("cy",y2);
	pt2.setAttribute("r",5);
	pt2.setAttribute("fill","#00000088");
	pt2.setAttribute("stroke","black");
	pt2.setAttribute("stroke-width","0.5"); 
	ln1.setAttribute("x1",x1);
	ln1.setAttribute("x2",x2);
	ln1.setAttribute("y1",560);
	ln1.setAttribute("y2",560);
	ln1.setAttribute("stroke",col2);
	ln1.setAttribute("stroke-width",5);
	ln2.setAttribute("x1",x1);
	ln2.setAttribute("x2",x2);
	ln2.setAttribute("y1",40);
	ln2.setAttribute("y2",40);
	ln2.setAttribute("stroke",col2);
	ln2.setAttribute("stroke-width",5);
	ln3.setAttribute("x1",45);
	ln3.setAttribute("x2",45);
	ln3.setAttribute("y1",y1);
	ln3.setAttribute("y2",y2);
	ln3.setAttribute("stroke",col1);
	ln3.setAttribute("stroke-width",5);
	ln4.setAttribute("x1",355);
	ln4.setAttribute("x2",355);
	ln4.setAttribute("y1",y1);
	ln4.setAttribute("y2",y2);
	ln4.setAttribute("stroke",col1);
	ln4.setAttribute("stroke-width",5);
	g.appendChild(pt1);
	g.appendChild(pt2);
	g.appendChild(ln1);
	g.appendChild(ln2);
	g.appendChild(ln3);
	g.appendChild(ln4);
	c.appendChild(g);
}

</script>


<h5>Spinner</h5>
<div id="svg_spin_147"></div>

<script>
	var svg2 = document.createElementNS("http://www.w3.org/2000/svg", "svg");
	svg2.setAttribute("width", 500);
	svg2.setAttribute("height", 500);
	svg2.setAttribute("id","spinner");
	svg2.setAttribute("viewBox","-1.2 -1.2 2.4 2.4");
	svg2.setAttribute("stroke-width","0.005")
	var cir = document.createElementNS("http://www.w3.org/2000/svg","circle");
	cir.setAttribute("cx", 0);
	cir.setAttribute("cy", 0);
	cir.setAttribute("r", 1);
	cir.setAttribute("fill","none");	
	cir.setAttribute("stroke","#000000");
	cir.setAttribute("stroke-width","0.005");
	svg2.appendChild(cir);
	for(var z=-3;z<=3.1;z++){
		var x = Math.sin(pnorm(z)*2*Math.PI);
		var y = -Math.cos(pnorm(z)*2*Math.PI);
		var lin = document.createElementNS("http://www.w3.org/2000/svg","line");
		lin.setAttribute("x1",x*0.8);
		lin.setAttribute("y1",y*0.8);
		lin.setAttribute("x2",x);
		lin.setAttribute("y2",y);
		lin.setAttribute("stroke-width","0.02");
		lin.setAttribute("stroke","black");
		svg2.appendChild(lin);
		if(Math.abs(z)<3){
			var tx = document.createElementNS("http://www.w3.org/2000/svg","text");
			tx.setAttribute("x",x*0.7);
			tx.setAttribute("y",y*0.7);
			tx.setAttribute("text-anchor","middle");
			tx.setAttribute("dominant-baseline","central");
			tx.setAttribute("transform","rotate("+Math.atan(y/x)/Math.PI*180+","+x*0.7+","+y*0.7+")");
			tx.appendChild(document.createTextNode(z));
			tx.setAttribute("font-size",0.08);
			svg2.appendChild(tx);
		}
	}
	for(var z=-2.5;z<=2.6;z+=1){
		var x = Math.sin(pnorm(z)*2*Math.PI);
		var y = -Math.cos(pnorm(z)*2*Math.PI);
		var lin = document.createElementNS("http://www.w3.org/2000/svg","line");
		lin.setAttribute("x1",x*0.85);
		lin.setAttribute("y1",y*0.85);
		lin.setAttribute("x2",x);
		lin.setAttribute("y2",y);
		lin.setAttribute("stroke-width","0.005");
		lin.setAttribute("stroke","black");
		svg2.appendChild(lin);
		if(Math.abs(z)<2){
			var tx = document.createElementNS("http://www.w3.org/2000/svg","text");
			tx.setAttribute("x",x*0.75);
			tx.setAttribute("y",y*0.75);
			tx.setAttribute("text-anchor","middle");
			tx.setAttribute("dominant-baseline","central");
			tx.setAttribute("transform","rotate("+Math.atan(y/x)/Math.PI*180+","+x*0.75+","+y*0.75+")");
			tx.appendChild(document.createTextNode(z));
			tx.setAttribute("font-size",0.07);
			svg2.appendChild(tx);
		}
	}
	for(var z=-3;z<=3.05;z+=0.1){
		if(Math.abs(z%0.5)>0.05){
		z = Math.round(z*100)/100
		var x = Math.sin(pnorm(z)*2*Math.PI);
		var y = -Math.cos(pnorm(z)*2*Math.PI);
		var lin = document.createElementNS("http://www.w3.org/2000/svg","line");
		lin.setAttribute("x1",x*0.9);
		lin.setAttribute("y1",y*0.9);
		lin.setAttribute("x2",x);
		lin.setAttribute("y2",y);
		lin.setAttribute("stroke-width","0.005");
		lin.setAttribute("stroke","black");
		svg2.appendChild(lin);
		if(Math.abs(z)<2){
			var tx = document.createElementNS("http://www.w3.org/2000/svg","text");
			tx.setAttribute("x",x*0.85);
			tx.setAttribute("y",y*0.85);
			tx.setAttribute("text-anchor","middle");
			tx.setAttribute("dominant-baseline","central");
			tx.setAttribute("transform","rotate("+Math.atan(y/x)/Math.PI*180+","+x*0.85+","+y*0.85+")");
			tx.appendChild(document.createTextNode(z));
			tx.setAttribute("font-size",0.04);
			svg2.appendChild(tx);
		}
	}
	}
	for(var z=-3;z<=3.05;z+=0.01){
		if(Math.abs(z%0.1)>0.001){
		z = Math.round(z*100)/100
		var x = Math.sin(pnorm(z)*2*Math.PI);
		var y = -Math.cos(pnorm(z)*2*Math.PI);
		var lin = document.createElementNS("http://www.w3.org/2000/svg","line");
		lin.setAttribute("x1",x*0.95);
		lin.setAttribute("y1",y*0.95);
		lin.setAttribute("x2",x);
		lin.setAttribute("y2",y);
		lin.setAttribute("stroke-width","0.002");
		lin.setAttribute("stroke","black");
		svg2.appendChild(lin);
	}
	}
	for(var pp=1;pp<100;pp++){
		var x = Math.sin(pp/100*2*Math.PI);
		var y = -Math.cos(pp/100*2*Math.PI);
		var lin = document.createElementNS("http://www.w3.org/2000/svg","line");
		lin.setAttribute("x1",x*1.05);
		lin.setAttribute("y1",y*1.05);
		lin.setAttribute("x2",x);
		lin.setAttribute("y2",y);
		lin.setAttribute("stroke-width","0.004");
		lin.setAttribute("stroke","black");
		svg2.appendChild(lin);
		var tx = document.createElementNS("http://www.w3.org/2000/svg","text");
		tx.setAttribute("x",x*1.1);
		tx.setAttribute("y",y*1.1);
		tx.setAttribute("text-anchor","middle");
		tx.setAttribute("dominant-baseline","central");
		tx.setAttribute("transform","rotate("+Math.atan(y/x)/Math.PI*180+","+x*1.1+","+y*1.1+")");
		tx.appendChild(document.createTextNode(pp/100));
		tx.setAttribute("font-size",0.04);
		svg2.appendChild(tx);
	}
	var lin = document.createElementNS("http://www.w3.org/2000/svg","line");
	lin.setAttribute("x1",0);
	lin.setAttribute("y1",-1.2);
	lin.setAttribute("x2",0);
	lin.setAttribute("y2",-1);
	lin.setAttribute("stroke-width","0.01");
	lin.setAttribute("stroke","black");
	svg2.appendChild(lin);
	var tx = document.createElementNS("http://www.w3.org/2000/svg","text");
	tx.setAttribute("x",0);
	tx.setAttribute("y",-1.15);
	tx.setAttribute("text-anchor","middle");
	tx.setAttribute("dominant-baseline","central");
	tx.appendChild(document.createTextNode("1 0"));
	tx.setAttribute("font-size",0.06);
	svg2.appendChild(tx);
	document.getElementById("svg_spin_147").appendChild(svg2);
</script>

<h5>Cumulative</h5>
<div id="svg_cumulative"></div>

<script>
var svg2 = document.createElementNS("http://www.w3.org/2000/svg", "svg");
svg2.setAttribute("width", 400);
svg2.setAttribute("height", 600);
svg2.setAttribute("id","cumul");
for(var pp=0;pp<=100.1;pp++){
	var l = document.createElementNS("http://www.w3.org/2000/svg","line");
	l.setAttribute("x1",50);
	l.setAttribute("x2",350);
	l.setAttribute("y1",pp*5+50);
	l.setAttribute("y2",pp*5+50);
	l.setAttribute("stroke","black");
	if(pp%10<0.1){
		l.setAttribute("stroke-width",0.8);
		var t = document.createElementNS("http://www.w3.org/2000/svg","text");
		t.setAttribute("x",25);
		t.setAttribute("y",pp*5+50);
		t.setAttribute("text-anchor","middle");
		t.setAttribute("dominant-baseline","central");
		t.appendChild(document.createTextNode(Math.round(100-pp)/100));
		svg2.appendChild(t);
		var t = document.createElementNS("http://www.w3.org/2000/svg","text");
		t.setAttribute("x",375);
		t.setAttribute("y",pp*5+50);
		t.setAttribute("text-anchor","middle");
		t.setAttribute("dominant-baseline","central");
		t.appendChild(document.createTextNode(Math.round(100-pp)/100));
		svg2.appendChild(t);	
	} else if (pp%5<0.1) {
		l.setAttribute("stroke-width",0.4);		
	} else {
		l.setAttribute("stroke-width",0.2);	
	}
	svg2.appendChild(l);
}
var pnts = "";
for(var zz=-3;zz<=3.1;zz+=0.1){
	var l = document.createElementNS("http://www.w3.org/2000/svg","line");
	l.setAttribute("x1",zz*50+200);
	l.setAttribute("x2",zz*50+200);
	l.setAttribute("y1",50);
	l.setAttribute("y2",550);
	l.setAttribute("stroke","black");
	var x = zz*50+200;
	var y = 550-pnorm(zz)*500;	
	pnts = pnts+x+","+y+" ";
	if(Math.abs(0.5-Math.abs(zz)%1)>0.45){
		l.setAttribute("stroke-width",0.8);	
		var t = document.createElementNS("http://www.w3.org/2000/svg","text");	
		t.setAttribute("x",zz*50+200);
		t.setAttribute("y",575);
		t.setAttribute("text-anchor","middle");
		t.setAttribute("dominant-baseline","central");
		t.appendChild(document.createTextNode(Math.round(zz)));
		svg2.appendChild(t);
		var t = document.createElementNS("http://www.w3.org/2000/svg","text");
		t.setAttribute("x",zz*50+200);
		t.setAttribute("y",25);
		t.setAttribute("text-anchor","middle");
		t.setAttribute("dominant-baseline","central");
		t.appendChild(document.createTextNode(Math.round(zz)));
		svg2.appendChild(t);
	} else if (Math.abs(0.25-Math.abs(zz)%0.5)>0.20) {
		l.setAttribute("stroke-width",0.4);		
	} else {
		l.setAttribute("stroke-width",0.2);	
	}
	svg2.appendChild(l);
}
var pl = document.createElementNS("http://www.w3.org/2000/svg","polyline");
pl.setAttribute("points",pnts);
pl.setAttribute("stroke","black");
pl.setAttribute("stroke-width","3");
pl.setAttribute("fill","none");
svg2.appendChild(pl);
document.getElementById("svg_cumulative").appendChild(svg2);
</script>
</body>
</html>